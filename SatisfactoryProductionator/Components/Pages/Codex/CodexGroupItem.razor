@using SatisfactoryProductionator.DataModels.Models.Codex;
@using SatisfactoryProductionator.Extensions;
@using SatisfactoryProductionator.Services.States;

@inject CodexModalState CodexModalState;

@implements IDisposable

<div data-augmented-ui-reset></div>

@* <div data-augmented-ui="tl-clip tr-2-clip-y br-clip bl-2-clip-x border" class="item-wrapper"> *@
    <div class="img-wrapper">
    <button class="image-button" type="button" @onclick="@(() => CodexModalState.SetSelectedItem(item))">
        <img class="image-192" src=@item.IconPath alt=@item.ClassName />
            </button>
    <div class="pos-rel item-name font-16">
        @item.DisplayName.FormatDisplayName().CondenseDisplayName()
    </div>

</div>
@* </div> *@

@code {
    [Parameter]
    public CodexEntry item { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        CodexModalState.OnStateChange += StateHasChanged;
    }

    public void Dispose()
    {
        CodexModalState.OnStateChange -= StateHasChanged;
    }

    public string GetFontSize() => item.DisplayName.Length > 28 ? "font-14" : "font-16";
    
}
