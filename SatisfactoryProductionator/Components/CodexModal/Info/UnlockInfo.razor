@using SatisfactoryProductionator.DataModels.Models;
@using SatisfactoryProductionator.Services;

@inject CodexModalState CodexModalState;

@implements IDisposable;

<div>
</div>

@*
 <div data-augmented-ui="
    tr-2-clip-y br-2-clip-x l-clip-y both
    " class="styleme"></div>
    <div class="info-panel-top-data"> *@

@*  <img class="info-panel-top-data-image2 image-64 test" src=@selectedEntry.CodexEntry.IconPath alt=@selectedEntry.CodexEntry.DisplayName />
<img class="info-panel-top-data-image2 image-64 test" src=@selectedEntry.CodexEntry.IconPath alt=@selectedEntry.CodexEntry.DisplayName />
<img class="info-panel-top-data-image2 image-64 test" src=@selectedEntry.CodexEntry.IconPath alt=@selectedEntry.CodexEntry.DisplayName />
<img class="info-panel-top-data-image2 image-64 test" src=@selectedEntry.CodexEntry.IconPath alt=@selectedEntry.CodexEntry.DisplayName />
<img class="info-panel-top-data-image2 image-64 test" src=@selectedEntry.CodexEntry.IconPath alt=@selectedEntry.CodexEntry.DisplayName />
<img class="info-panel-top-data-image2 image-64 test" src=@selectedEntry.CodexEntry.IconPath alt=@selectedEntry.CodexEntry.DisplayName />
<img class="info-panel-top-data-image2 image-64 test" src=@selectedEntry.CodexEntry.IconPath alt=@selectedEntry.CodexEntry.DisplayName />
<img class="info-panel-top-data-image2 image-64 test" src=@selectedEntry.CodexEntry.IconPath alt=@selectedEntry.CodexEntry.DisplayName /> *@


@code {
    [CascadingParameter(Name = "SelectedEntry")]
    public ModalEntry selectedEntry { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        CodexModalState.OnStateChange += StateHasChanged;
    }

    public void Dispose()
    {
        CodexModalState.OnStateChange -= StateHasChanged;
    }
}
