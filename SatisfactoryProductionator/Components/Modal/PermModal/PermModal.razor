@using SatisfactoryProductionator.Services;

@inject PermModalState PermModalState;

@implements IDisposable;

<div data-augmented-ui="tl-2-clip-y tr-2-clip-x br-clip bl-clip border" class="top-panel">
    <div data-augmented-reset></div>
    <div data-augmented-ui="br-clip bl-clip border" class="top-panel-inner">
    </div>
</div>

<div data-augmented-ui="tl-clip tr-clip br-2-clip-y bl-2-clip-x border" class="bottom-panel">
    <div data-augmented-reset></div>
    <div data-augmented-ui="tl-clip tr-clip border" class="bottom-panel-inner">
    
    
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();

        PermModalState.OnStateChange += StateHasChanged;
    }

    public void Dispose()
    {
        PermModalState.OnStateChange -= StateHasChanged;
    }
}
