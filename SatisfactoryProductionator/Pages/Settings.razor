@page "/settings"
@using SatisfactoryProductionator.Services;
@using SatisfactoryProductionator.Shared.States
@using SatisfactoryProductionator.Shared.States.Models
@inject SettingsState SettingsState
@inject CodexState CodexState
@implements IDisposable

<style type="text/css">

.codex-main-panel{
    position: absolute;
    top: 14px;
    left: 275px;
    right: 14px;
    bottom: 14px;
    --aug-border-all: 3px;
    --aug-border-bg: var(--sfBlue);
    --aug-tl: 15px;
    --aug-tr: 33px;
    --aug-br: 33px;
    --aug-bl: 20px;
}    

</style>

<div data-augmented-ui-reset></div>
<CodexMenu />

<div data-augmented-ui="tl-2-clip-x tr-clip br-clip bl-2-clip-y border" class="codex-main-panel">
    
    
    @if(CodexState.Codex == null)
    {
        <div>Loading.....</div>
    }
    else
    {
        <div>Loaded</div>

        
            
                
        
    }

</div>



@code {

    private static AppSettings _settings = new AppSettings();

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        // SettingsState.OnStateChange += StateHasChanged;
        CodexState.OnStateChange += StateHasChanged;

        // _settings = SettingsState.Value ?? new AppSettings();

        if (CodexState.Codex == null)
        {
            await CodexState.InitializeCodexAsync();
        }
    }

    public void Dispose()
    {
        // SettingsState.OnStateChange -= StateHasChanged;
        CodexState.OnStateChange -= StateHasChanged;
    }

}
