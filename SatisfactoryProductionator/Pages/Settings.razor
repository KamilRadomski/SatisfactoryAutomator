@page "/settings"

@using SatisfactoryProductionator.DataModels.Enums;
@using SatisfactoryProductionator.DataModels.Models.Codex;
@using SatisfactoryProductionator.DataModels;
@using SatisfactoryProductionator.Services;
@using SatisfactoryProductionator.Components;
@using SatisfactoryProductionator.Components.CodexModal;
@using SatisfactoryProductionator.Components.XXXTemp

@inject CodexState CodexState
@inject MenuState MenuState

@implements IDisposable

<div data-augmented-ui-reset></div>
@{
    MenuState.SetPage(Page.Settings);
}

<TempMain />

@code {

    private static AppSettings _settings = new AppSettings();

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        CodexState.OnStateChange += StateHasChanged;
        MenuState.OnStateChange += StateHasChanged;

        if (CodexState.Codex == null)
        {
            await CodexState.InitializeCodexAsync();
        }
    }

    public void Dispose()
    {
        CodexState.OnStateChange -= StateHasChanged;
        MenuState.OnStateChange -= StateHasChanged;
    }

}