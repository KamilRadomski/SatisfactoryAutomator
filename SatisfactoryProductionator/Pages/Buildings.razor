@page "/buildings"
@using SatisfactoryProductionator.DataModels.Models
@using SatisfactoryProductionator.DataParser
<h3>Buildings</h3>

@if (_buildings == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table" style="flex-wrap: wrap">
        <thead>
        <tr>
            <th>Icon</th>
            <th>Name</th>
            <th>Category</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in _buildings)
        {
            <tr>
                <td><img src=@GetIconLocation(item.DisplayName!)/></td>
                <td>@item.DisplayName</td>
                <td>@item.BuildingType</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private static List<Building>? _buildings;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => _buildings ??= DataAggregator.Buildings);
        _buildings!.Sort((n1, n2) => String.Compare(n1.DisplayName!, n2.DisplayName, StringComparison.Ordinal));
        
    }

    private static string GetIconLocation(string name)
    {
        name = name.Replace(" ", "").Replace("-", "").Replace(".", "");
        return $"icons/{name}_256.png";
    }
}
